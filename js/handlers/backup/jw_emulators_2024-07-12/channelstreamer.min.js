/**
* This subclasss of AbstractTicker2 can be used to render additional data streams (e.g. internal
* music player channels) in sync with the actual WebAudio music playback.
*
* version 1.2.1
*
* The old Wiz based impl has been replaced with a new impl. The API is mostly backward compatible
* to the older 1.0.6 version. Except: zoomLevel display range semantics have changed and useSidWiz has been
* replaced with useSyncMode semantics. (In "useSyncMode" the logic tries to align the displayed data
* such that the oscillation shown in the x-axis center is "fixed in place" .. creating the impression
* of a standing wave. As before this only works for simple waveforms, e.g. pulse, sine, etc)
*
* note: This impl relies on always caching 2*16384 samples per stream. If WebAudio
* buffering is using the maximum buffer size of 16384 then this results in a simple
* double buffering scheme. But actually the implementation uses a circular buffer approach
* and smaller WebAudio buffers will cause more slots to be used in the circular
* buffer (e.g. a buffer size of 8192 would use 4 slots, etc).
*
*
* Copyright (C) 2023 Juergen Wothke
*
* Terms of Use: This software is licensed under a CC BY-NC-SA
* (http://creativecommons.org/licenses/by-nc-sa/4.0/).
*/
class ChannelStreamer extends AbstractTicker2{constructor(t,e){super(),this._outputSize=0,this._changeOutputSize=0,void 0===t&&(t=3),this.setZoom(t),this._outputV=null,this._numStreams=0,this._smplBufLen=0,this._usedNumStreams=0,this._vuOutEnabled=void 0===e||e}init(t,e,s){this._readFloatFunc=s,this._samplesPerBuffer=t;let i=this._circularBufSlots;this._circularBufSlots=32768/t,this._currentBufIdx=this._circularBufSlots-1,this._tickerStepWidth=e,this._reset(i)}startAudioBuffer(){this._stepCircularBuffer()}resampleTickerData(t,e,s,i,r){this._usedNumStreams=i;try{this._assertBuffers()}catch(t){return}const h=t==e?s:Math.round(s*t/e);for(let t=0;t<this.getNumStreams();t++)this._resampleV[t]=this._assertBuffer(this._resampleV[t],h);for(let t=0;t<this.getNumStreams();t++)this._resample(r[t],s,this._resampleV[t],h)}copyTickerData(t,e,s){try{this._assertBuffers()}catch(t){return}let i=this._buffers[this._currentBufIdx];for(let r=0;r<this.getNumStreams();r++){let h=i[r],a=this._resampleV[r];for(let i=t,r=e;i<t+s;i++,r++)h[i]=a[r]}}setZoom(t){const e=ScriptNodePlayer.getWebAudioSampleRate();if(t<1||t>5)console.log("error: invalid zoom level "+t+" (settings unchanged!)");else{this._zoomLevel=t;let s=e/60;this._setOutputSize(s*(t+1))}}getZoomLevel(){return this._zoomLevel}getDataLength(){try{return this._assertBuffers(),this._assertOutputV(),this._outputSize}catch(t){return Math.max(this._outputSize,this._changeOutputSize)}}getData(t){try{this._assertBuffers(),this._assertOutputV()}catch(t){let e=Math.max(this._outputSize,this._changeOutputSize);return(void 0===this.phantomChannel||this.phantomChannel.length<e)&&(this.phantomChannel=new Float32Array(e)),this.phantomChannel}if(t>=this.getNumStreams())return this.phantomChannel;{let e=this._outputV[t];return void 0!==e&&(this._copySlidingWindow(t,e),this._vuOutEnabled&&this._updateVuLevel(t,e)),e}}enableVuOutput(t){this._vuOutEnabled=t}getVuMeterLevel(t){return void 0===this._vuMeters?0:this._vuMeters[t]}getOverallVuMeterLevel(){const t=this.getNumStreams();if(t){let e=0;for(let s=0;s<t;s++)e+=this.getVuMeterLevel(s);return e/=t>>1}return 0}isSidWizMode(){return alert("isSidWizMode() no longer available"),null}setMode(t,e){alert("error: ChannelStreamer.setMode() no longer available - use setZoom()"),this.setZoom(e)}getNumStreams(){return this._numStreams}_reset(t){if(void 0!==this._buffers)if(t!=this._circularBufSlots)this._buffers=void 0;else{for(let t=0;t<this._circularBufSlots;t++)for(let e=0;e<this._numStreams;e++){let s=this._buffers[t][e];for(let t=0;t<this._samplesPerBuffer;t++)s[t]=0}this._currentBufIdx=this._circularBufSlots-1}for(let t=0;t<this._numStreams;t++)this._vuMeters[t]=0}_assertBuffers(){let t=this._usedNumStreams;if(this._smplBufLen!=this._samplesPerBuffer||t!=this._numStreams){this._vuMeters=new Float32Array(t),this._resampleV=[];for(let e=0;e<t;e++){this._vuMeters[e]=0;let t=new Float32Array(this._samplesPerBuffer);for(let e=0;e<this._samplesPerBuffer;e++)t[e]=0;this._resampleV.push(t)}this._buffers=[];for(let e=0;e<this._circularBufSlots;e++){let e=[];for(let s=0;s<t;s++)e.push(new Float32Array(this._samplesPerBuffer));this._buffers.push(e)}this._smplBufLen=this._samplesPerBuffer,this._numStreams=t}}_stepCircularBuffer(){this._currentBufIdx+=1,this._currentBufIdx>=this._circularBufSlots&&(this._currentBufIdx=0)}_assertOutputV(){const t=this._usedNumStreams,e=null==this._outputV||this._outputV.length!=t||0==this._outputV.length;if(e&&(this._outputV=new Array(t)),this._changeOutputSize&&(this._outputSize=this._changeOutputSize,this._changeOutputSize=0),t&&(e||this._outputV[0].length!=this._outputSize)){for(let e=0;e<t;e++)this._outputV[e]=new Float32Array(this._outputSize);this.phantomChannel=new Float32Array(this._outputSize)}}_setOutputSize(t){t>16384&&(console.log("error: max output size is 16384"),t=16384),this._changeOutputSize=t}_updateVuLevel(t,e){let s=ScriptNodePlayer.getWebAudioSampleRate()/60;if(e.length<s)return void console.log("error in _updateVuLevel");let i=e.length-s;s>>=3;let r=0;for(let t=0;t<s;t+=8)r+=Math.abs(e[i+t]);this._vuMeters[t]=.5*(.8*this._vuMeters[t]+(r<<3)/s)}_resample(t,e,s,i){i==e?BufferUtil.remapToFloat(t,e,this._readFloatFunc,s):BufferUtil.resampleToFloat(1,0,t,e,this._readFloatFunc,s,i)}_allocResampleBuffer(t){return new Float32Array(t)}_assertBuffer(t,e){return e>t.length&&(t=this._allocResampleBuffer(e)),t}_copySlidingWindow(t,e){let s=0,i=ScriptNodePlayer.getInstance().getMaxTicks();s=ScriptNodePlayer.getInstance().getCurrentTick();let r=(s+1)*this._tickerStepWidth,h=e.length,a=ScriptNodePlayer.getInstance().getBufNum();a=-1==a?this._circularBufSlots-1:a%this._circularBufSlots;let u=this._buffers[a],l=u[t];for(;h>0;){if(!(h>=r)){this._arrayCopy(l,r-h,h,e,0);break}h-=r,this._arrayCopy(l,0,r,e,h),a=a?a-1:this._circularBufSlots-1,u=this._buffers[a],l=u[t],r=i*this._tickerStepWidth}}_arrayCopy(t,e,s,i,r){for(let h=0;h<s;h++)i[r+h]=t[e+h]}}class VoiceDisplay{constructor(t,e,s,i){this._useSyncMode=i,this._ticker=e,this._getData=s,this._drawOnCanvas=!1,"string"==typeof t?(this._canvas=document.getElementById(t),this._drawOnCanvas=!0):t&&"object"==typeof t&&"HTMLCanvasElement"==t.constructor.name&&(this._canvas=t,this._drawOnCanvas=!0),this._drawOnCanvas?(this._ctx=this._canvas.getContext("2d"),this.setStrokeColor("rgba(1, 0, 0, 1.0)"),this._outVertices=null):(this._outVertices=new Float32Array(0),this._canvas=this._ctx=null),this.setSize(512,80)}getOutputVertices(){return this._outVertices}setSyncMode(t){this._useSyncMode=t}setSize(t,e){this._width=t,this._height=e,this._canvas&&(this._canvas.width=t,this._canvas.height=e)}setStrokeColor(t){this._strokeColor=t}_reqAnimationFrame(){window.requestAnimationFrame(this.redraw.bind(this))}redraw(){this.redrawGraph(),this._reqAnimationFrame()}_getMinMax(t,e,s){let i=-1,r=1;for(let h=1;h<s;h++){let s=t[e+h];s<i&&(i=s),s>r&&(r=s)}return[i,r]}_getBounds(t){let e=Math.abs(.1*t);return[t-e,t+e]}_getIdxLo(t,e,s){let i=!0,r=t[e]+t[e-1]+t[e-2],[h,a]=this._getBounds(r),u=0;for(let l=1;l<s;l++){let s=t[e-l]+t[e-l-1]+t[e-l-2];i&&s<=r?(u=l,r=s,[h,a]=this._getBounds(r)):s<h?(i=!0,u=l,r=s,[h,a]=this._getBounds(r)):s>a&&(i=!1)}return u}_getHiLimit(t){return t+Math.abs(.25*t)}_getIdxHi(t,e,s){let i=!0,r=t[e],h=this._getHiLimit(r),a=0;for(let u=1;u<s;u++){let s=t[e-u];i&&s>=r?(a=u,r=s,h=this._getHiLimit(r)):s>h?(a=u,r=s,h=this._getHiLimit(r),i=!0):i=!1}return a}_getMaxScanRange(){const t=ScriptNodePlayer.getWebAudioSampleRate();return Math.floor(t/45)}redrawGraph(){if(ScriptNodePlayer.getInstance().isPaused()||!this._ticker.getNumStreams())return;const t=this._getMaxScanRange();let e=this._getData();if(0==e.length)return;let s,i,r,h=e.length-t,a=Math.floor(t+(h>>1));this._useSyncMode?(s=this._getIdxLo(e,a,t),i=s+this._getIdxHi(e,a-s,t-s),r=t-(s+i>>1)):r=t;const[u,l]=this._getMinMax(e,r,h);let o=this._height/(l-u),_=this._width/h;if(this._drawOnCanvas){try{this._ctx.fillStyle="rgba(0, 0, 0, 0.0)"}catch(t){}this._ctx.clearRect(0,0,this._width,this._height),this._ctx.strokeStyle=this._strokeColor,this._ctx.save(),this._ctx.beginPath();for(let t=0;t<h;t++){let s=(e[r+t]-u)*o;0==t?this._ctx.moveTo(Math.floor(t*_),this._height-s):this._ctx.lineTo(Math.floor(t*_),this._height-s)}this._ctx.stroke(),this._ctx.restore()}else{let t=3*h;this._outVertices.length!=t&&(this._outVertices=new Float32Array(t),this._outVertices.fill(0));for(let t=0;t<h;t++){let s=(e[r+t]-u)*o;this._outVertices[3*t]=Math.floor(t*_),this._outVertices[3*t+1]=this._height-s}}}_redrawDbgLine(t,e){this._ctx.strokeStyle=t,this._ctx.save(),this._ctx.beginPath(),this._ctx.moveTo(e,this._height),this._ctx.lineTo(e,0),this._ctx.stroke(),this._ctx.restore()}}